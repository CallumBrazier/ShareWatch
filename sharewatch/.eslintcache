[{"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/index.js":"1","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/App.js":"2","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/reportWebVitals.js":"3","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/modal.js":"4","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Header.js":"5","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Modal.js":"6","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Navbar.js":"7","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Home.js":"8","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/AuthOptions.js":"9","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Context/UserContext.js":"10","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/misc/ErrorNotice.js":"11","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Dashboard.js":"12","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Search.js":"13","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Card.js":"14","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/DashboardCard.js":"15","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Graph.js":"16","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Comparison.js":"17"},{"size":595,"mtime":1611111072923,"results":"18","hashOfConfig":"19"},{"size":896,"mtime":1614306894123,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610169831629,"results":"21","hashOfConfig":"19"},{"size":7429,"mtime":1610502021101,"results":"22","hashOfConfig":"19"},{"size":1746,"mtime":1615864100591,"results":"23","hashOfConfig":"19"},{"size":5463,"mtime":1615767682148,"results":"24","hashOfConfig":"19"},{"size":2379,"mtime":1614306925580,"results":"25","hashOfConfig":"19"},{"size":2038,"mtime":1611720780102,"results":"26","hashOfConfig":"19"},{"size":808,"mtime":1611268564778,"results":"27","hashOfConfig":"19"},{"size":1433,"mtime":1611110872176,"results":"28","hashOfConfig":"19"},{"size":242,"mtime":1611089179794,"results":"29","hashOfConfig":"19"},{"size":3488,"mtime":1615767691815,"results":"30","hashOfConfig":"19"},{"size":1404,"mtime":1615943589686,"results":"31","hashOfConfig":"19"},{"size":17056,"mtime":1615945625331,"results":"32","hashOfConfig":"19"},{"size":16642,"mtime":1615845413179,"results":"33","hashOfConfig":"19"},{"size":838,"mtime":1614155608110,"results":"34","hashOfConfig":"19"},{"size":424,"mtime":1614311914246,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"m2ynjx",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/index.js",[],["78","79"],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/App.js",["80"],"import React, { useEffect, useContext } from \"react\";\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Home from \"./Pages/Home\";\nimport Dashboard from \"./Pages/Dashboard\";\nimport Search from \"./Pages/Search\";\nimport UserContext from \"./Context/UserContext\";\nimport Comparison from \"./Pages/Comparison\";\n\nexport default function App() {\n  const { checkedLoggedIn } = useContext(UserContext);\n\n  useEffect(() => {\n    checkedLoggedIn();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/comparison\" component={Comparison} />\n      </Switch>\n    </Router>\n  );\n}\n","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/reportWebVitals.js",[],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/modal.js",["81","82","83","84"],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Header.js",["85","86","87"],"import React, { useState, useEffect } from \"react\";\n\nimport \"./CSS/Header.css\";\nimport iphone from \"../images/iphone-sw.png\";\n\nexport default function Header({ handleOpen }) {\n  return (\n    <div className=\"top-section\">\n      <div className=\"header glass\">\n        <div className=\"header-left\">\n          <h1 className=\"header-title\">\n            Invest in your future,\n            <br /> It's as easy as 1, 2, 3!\n          </h1>\n          <p className=\"header-para\">\n            1. Create an\n            <a className=\"clickable-link\" onClick={handleOpen}>\n              {\" \"}\n              account\n            </a>\n            !\n            <br /> 2. Select companies to monitor on your dashboard.\n            <br /> 3. Make informed investment decisions and profit!*\n          </p>\n\n          <div className=\"buttonGrp\">\n            <button className=\"investButton\" onClick={handleOpen}>\n              <b>Start investing now</b>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"header-right\">\n          <img src={iphone} alt=\"iphone\" className=\"iphone-image\" />\n        </div>\n      </div>\n\n      {/* <div className=\"circle-left\"></div>\n      <div className=\"circle-right\"></div>\n      <div className=\"circle-mid\"></div>\n      <div className=\"circle-bottom\"></div>\n      <div className=\"circle\"></div> */}\n\n      <div className=\"disclaimer\">\n        <h6 className=\"disclaimer-text\">\n          *Investing involves risk. You aren’t guaranteed to make money, and you\n          might lose the money you start with. We don’t provide personalised\n          advice or recommendations. Any information we provide is general only\n          and current at the time written.\n        </h6>\n      </div>\n    </div>\n  );\n}\n","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Modal.js",["88"],"import React, { useState, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport UserContext from \"../Context/UserContext\";\n\nimport \"./CSS/modal.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\n\nconst port = process.env.PORT || 3001;\n\nconst Body = ({ handleClose, handleClick }) => {\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordCheck, setPasswordConfirm] = useState(\"\");\n  const [registerStatus, setRegisterStatus] = useState(\"\");\n\n  const registerUser = async () => {\n    try {\n      const newUser = { email, fullName, password, passwordCheck };\n      await Axios.post(`/users/signup`, newUser).then((res) => {\n        if (res.data.msg) {\n          setRegisterStatus(res.data.msg);\n        }\n      });\n    } catch (err) {\n      err.response.data.msg && setRegisterStatus(err.response.data.msg);\n    }\n  };\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <FontAwesomeIcon\n          onClick={handleClose}\n          className=\"fontAwesomeCross\"\n          icon={faTimes}\n          size=\"2x\"\n        />\n\n        <h1 className=\"modal-title\">\n          Control your <br /> finances!\n        </h1>\n        <h3 className=\"modal-context-active\" onClick={handleClick}>\n          Sign Up\n        </h3>\n        <h3 className=\"modal-context-inactive\" onClick={handleClick}>\n          Login\n        </h3>\n        {registerStatus && (\n          <ErrorNotice\n            message={registerStatus}\n            clearError={() => setRegisterStatus(undefined)}\n          />\n        )}\n        <form name=\"registerForm\">\n          <input\n            className=\"modal-input\"\n            type=\"text\"\n            name=\"fullName\"\n            placeholder=\" Full Name\"\n            required\n            onChange={(e) => {\n              setFullName(e.target.value);\n            }}\n          />\n          <br />\n          <input\n            className=\"modal-input\"\n            type=\"emailaddress\"\n            name=\"email\"\n            placeholder=\" Email Address\"\n            required\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <br />\n          <input\n            className=\"modal-input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\" Password\"\n            required\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <br />\n          <input\n            className=\"modal-input\"\n            type=\"password\"\n            name=\"confirm\"\n            placeholder=\" Confirm Password\"\n            required\n            onChange={(e) => {\n              setPasswordConfirm(e.target.value);\n            }}\n          />\n\n          <br />\n          <button\n            type=\"reset\"\n            className=\"signinButton\"\n            variant=\"contained\"\n            onClick={registerUser}\n          >\n            Start your journey!\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst Body2 = ({ handleClose, handleClick }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { user, setLogin } = useContext(UserContext);\n  const [loginStatus, setLoginStatus] = useState(\"\");\n\n  const history = useHistory();\n\n  const login = async (e) => {\n    try {\n      const loginRes = await Axios.post(`/users/login`, {\n        email: email,\n        password: password,\n      });\n      setLogin({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      localStorage.setItem(\"user\", loginRes.data.user);\n      history.push(\"/dashboard\");\n      console.log(\"user\", user);\n    } catch (err) {\n      err.response.data.msg && setLoginStatus(err.response.data.msg);\n    }\n  };\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <FontAwesomeIcon\n          onClick={handleClose}\n          className=\"fontAwesomeCross\"\n          icon={faTimes}\n          size=\"2x\"\n        />\n\n        <h1 className=\"modal-title\">Welcome!</h1>\n        <h3 className=\"modal-context-inactive\" onClick={handleClick}>\n          Sign Up\n        </h3>\n        <h3 className=\"modal-context-active2\">Log In</h3>\n        {loginStatus && (\n          <ErrorNotice\n            message={loginStatus}\n            clearError={() => setLoginStatus(undefined)}\n          />\n        )}\n        <form>\n          <input\n            className=\"modal-input\"\n            type=\"emailaddress\"\n            name=\"email\"\n            placeholder=\" Email Address\"\n            required\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <br />\n          <input\n            className=\"modal-input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\" Password\"\n            required\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <br />\n        </form>\n\n        <button className=\"loginButton\" variant=\"contained\" onClick={login}>\n          Start investing!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport { Body, Body2 };\n","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Navbar.js",["89"],"import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\n\nimport \"../Pages/CSS/Home.css\";\nimport swlogo from \"../images/SW-Main-Logo-White.png\";\nimport AuthOptions from \"./AuthOptions\";\nimport UserContext from \"../Context/UserContext\";\n\nexport default function Navbar({ handleOpen, handleOpen2 }) {\n  const { user } = useContext(UserContext);\n  return (\n    <div className=\"navBar\">\n      {user.user ? (\n        <div className=\"topNav\">\n          <div className=\"logo\">\n            <NavLink to=\"/home\" className=\"navBar-link\">\n              <img className=\"main-logo\" src={swlogo} alt=\"main logo\" />\n            </NavLink>\n          </div>\n\n          <div className=\"navLinks\">\n            <ul>\n              <NavLink to=\"/dashboard\" className=\"navBar-link\">\n                <li>Dashboard</li>\n              </NavLink>\n              <NavLink to=\"/search\" className=\"navBar-link mid-link\">\n                <li>Search</li>\n              </NavLink>\n              <NavLink to=\"/Comparison\" className=\"navBar-link\">\n                <li>Comparison</li>\n              </NavLink>\n            </ul>\n          </div>\n          <div className=\"sign\">\n            <span>\n              <AuthOptions\n                handleOpen={handleOpen}\n                handleOpen2={handleOpen2}\n              ></AuthOptions>\n            </span>\n          </div>\n        </div>\n      ) : (\n        <div className=\"topNav\">\n          <div className=\"logo\">\n            <NavLink to=\"/home\" className=\"navBar-link\">\n              <img className=\"main-logo\" src={swlogo} alt=\"main logo\" />\n            </NavLink>\n          </div>\n\n          <div className=\"navLinks\">\n            <ul>\n              <NavLink to=\"/home\" className=\"navBar-link\">\n                <li>Home</li>\n              </NavLink>\n              <NavLink to=\"/home\" className=\"navBar-link mid-link\">\n                <li>Opportunities</li>\n              </NavLink>\n              <NavLink to=\"/home\" className=\"navBar-link\">\n                <li>Contact Us</li>\n              </NavLink>\n            </ul>\n          </div>\n          <div className=\"sign\">\n            <span>\n              <AuthOptions\n                handleOpen={handleOpen}\n                handleOpen2={handleOpen2}\n              ></AuthOptions>\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Home.js",["90","91","92","93","94","95","96"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport UserContext from \"../Context/UserContext\";\n// import { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport \"./CSS/Home.css\";\n\nimport Navbar from \"../Components/Navbar\";\nimport Header from \"../Components/Header\";\n\nimport Modal from \"@material-ui/core/Modal\";\n\nimport { Body, Body2 } from \"../Components/Modal\";\n\nconst HomePage = () => {\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 });\n  const isBigScreen = useMediaQuery({ minDeviceWidth: 1824 });\n  const isTabletOrMobile = useMediaQuery({ maxWidth: 1224 });\n  const isTabletOrMobileDevice = useMediaQuery({ maxDeviceWidth: 1224 });\n  const isPortrait = useMediaQuery({ orientation: \"portrait\" });\n  const isRetina = useMediaQuery({ minResolution: \"2dppx\" });\n\n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setOpen2(false);\n  };\n\n  const handleOpen2 = () => {\n    setOpen2(true);\n  };\n\n  const handleClick = () => {\n    if (open === true) {\n      setOpen(false);\n      setOpen2(true);\n    } else if (open2 === true) {\n      setOpen2(false);\n      setOpen(true);\n    }\n  };\n\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    console.log(user);\n  }, []);\n\n  return (\n    <div>\n      <Modal open={open} onBackdropClick={handleClose}>\n        <Body\n          handleClick={handleClick}\n          handleClose={handleClose}\n          onBackdropClick={handleClose}\n        />\n      </Modal>\n\n      <Modal open={open2} onBackdropClick={handleClose}>\n        <Body2\n          handleClick={handleClick}\n          handleClose={handleClose}\n          onBackdropClick={handleClose}\n        />\n      </Modal>\n\n      <Navbar handleOpen={handleOpen} handleOpen2={handleOpen2} />\n      <Header handleOpen={handleOpen} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/AuthOptions.js",[],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Context/UserContext.js",[],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/misc/ErrorNotice.js",[],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Dashboard.js",["97","98","99"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\nimport Navbar from \"../Components/Navbar\";\nimport \"./CSS/Dashboard.css\";\nimport UserContext from \"../Context/UserContext\";\nimport dotenv from \"dotenv\";\nimport Axios from \"axios\";\nimport DashboardCard from \"../Components/DashboardCard\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nconst port = process.env.PORT || 3001;\n\ndotenv.config();\n\nconst Dashboard = () => {\n  const { user } = useContext(UserContext);\n  const [followedStocks, setFollowedStocks] = useState([]);\n\n  const favouriteStocks = async () => {\n    let id = user.user.id;\n    let data = { id };\n\n    await Axios.post(`/stocks/allfavourites`, data).then((res) => {\n      if (res.data.msg) {\n        console.log(\"res\", res);\n        console.log(res.data.msg);\n        let favs = res.data.favourites;\n        console.log(favs);\n        let stockArray = [];\n        for (let i = 0; i < favs.length; i++) {\n          stockArray.push({\n            ticker: favs[i].ticker,\n            code: favs[i].uniqueCode,\n          });\n        }\n        setFollowedStocks([...stockArray]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    favouriteStocks();\n  }, []);\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(followedStocks);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    console.log(items);\n    console.log(\"followedstocks\", followedStocks);\n    setFollowedStocks(items);\n  };\n\n  return (\n    <div>\n      <body>\n        <Navbar />\n        <div className=\"header glass\">\n          <div className=\"account-title\">\n            <h1>Welcome, {user.user.fullName}!</h1>\n          </div>\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId=\"characters\">\n              {(provided) => (\n                <div\n                  className=\"dashboard\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {followedStocks.length > 0 ? (\n                    followedStocks.map(({ ticker, code }, index) => {\n                      return (\n                        <Draggable key={code} draggableId={code} index={index}>\n                          {(provided) => (\n                            <div\n                              className=\"dashboard-card\"\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              ref={provided.innerRef}\n                            >\n                              <DashboardCard query={ticker} />\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })\n                  ) : (\n                    <div>\n                      <h3>\n                        You are not following any stocks!{\" \"}\n                        <NavLink to=\"/search\">\n                          Click here to get searching!\n                        </NavLink>\n                      </h3>\n                    </div>\n                  )}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </body>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Search.js",["100"],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Card.js",["101","102","103","104","105","106","107","108","109","110","111"],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/DashboardCard.js",["112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Axios from \"axios\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowAltCircleUp,\n  faArrowAltCircleDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./CSS/Card.css\";\nimport UserContext from \"../Context/UserContext\";\nimport LineGraph from \"./Graph\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 375,\n    maxWidth: 375,\n    borderRadius: \"2rem\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function DashboardCard({ query }) {\n  const { user } = useContext(UserContext);\n  const classes = useStyles();\n  const [company, setCompany] = useState(\"\");\n  const [stock, setStock] = useState(\"\");\n  const [metrics, setMetrics] = useState(\"\");\n  const [stockHistory, setStockHistory] = useState([]);\n  const [expanded, setExpanded] = useState(false);\n  const [newsexpanded, setNewsExpanded] = useState(false);\n  const [favourite, setFavourite] = useState(false);\n  const [timeframe, setTimeframe] = useState(\"1D\");\n  const [unixtime, setUnixtime] = useState(\"\");\n  const [interval, setInterval] = useState(\"1\");\n  const [graphData, setGraphData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [newsData, setNewsData] = useState([]);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleExpandClickNews = () => {\n    setNewsExpanded(!newsexpanded);\n  };\n\n  const favouriteStock = async () => {\n    let id = user.user.id;\n    let ticker = company.ticker;\n    let data = { id, ticker };\n\n    if (favourite === false) {\n      setFavourite(true);\n      await Axios.post(\"/stocks/favourites\", data).then((res) => {\n        if (res.data.msg) {\n          // setStatus(res.data.msg);\n          console.log(res.data.msg);\n        }\n      });\n    } else if (favourite === true) {\n      setFavourite(false);\n      console.log(data);\n      await Axios.delete(\"/stocks/delete\", {\n        data: data,\n      }).then((res) => {\n        if (res.data.msg) {\n          console.log(res.data.msg);\n\n          // setStatus(res.data.msg);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    async function getNews() {\n      const d = new Date();\n      const dateto = d.toISOString().split(\"T\")[0];\n      const startdate = d.setFullYear(d.getFullYear() - 1);\n      const date = new Date(startdate);\n      const datefrom = date.toISOString().split(\"T\")[0];\n      let data = { dateto, datefrom, query };\n\n      await Axios.post(\"/api/companynews\", data).then((res) => {\n        console.log(\"date-info\", res);\n        if (res.data.msg) {\n          return console.log(\"news error message\", res.data.msg);\n        } else {\n          setNewsData(res.data.data);\n          console.log(\"FH-News-Info\", res.data.data);\n        }\n      });\n    }\n\n    async function getStock() {\n      let data = { query };\n      await Axios.post(\"/api/stockinfo\", data).then((res) => {\n        console.log(\"stock-info\", res);\n        if (res.data.msg) {\n          return console.log(\"stock info error\", res.data.msg);\n        } else {\n          setStock(res.data.data);\n          console.log(\"FH-Stock-Info\", res.data.data);\n        }\n      });\n    }\n\n    async function getMetrics() {\n      let data = { query };\n      await Axios.post(\"/api/metrics\", data).then((res) => {\n        console.log(\"metrics\", res);\n        if (res.data.msg) {\n          return console.log(\"metric info error\", res.data.msg);\n        } else {\n          setMetrics(res.data.data);\n          console.log(\"FH-Metrics-Info\", res.data.data);\n        }\n      });\n    }\n\n    async function getCompany() {\n      let data = { query };\n      await Axios.post(\"/api/companydetails\", data).then((res) => {\n        console.log(\"company details\", res);\n        if (res.data.msg) {\n          return console.log(\"company info error\", res.data.msg);\n        } else {\n          setCompany(res.data.data);\n          console.log(\"FH-Company-Info\", res.data.data);\n        }\n      });\n    }\n\n    async function getFavourite() {\n      let id = user.user.id;\n      let ticker = query;\n      console.log(id, ticker);\n      let data = { id, ticker };\n\n      try {\n        await Axios.post(\"/stocks/checkfavourite\", data).then((res) => {\n          if (res.data.msg) {\n            console.log(res.data.msg);\n            setFavourite(true);\n          }\n        });\n      } catch (err) {\n        console.log(\"Not yet favourited\");\n        setFavourite(false);\n      }\n    }\n\n    getStock();\n    getMetrics();\n    getCompany();\n    getNews();\n    setFavourite(false);\n    getFavourite();\n  }, [query]);\n\n  useEffect(() => {\n    const currentdate = Math.round(new Date().getTime() / 1000);\n    const date = new Date();\n    const daybefore = Math.round(date.setDate(date.getDate() - 1) / 1000);\n    const int = \"1\";\n\n    async function firstAPICall() {\n      let data = { currentdate, date, daybefore, int, query };\n      await Axios.post(\"/api/candles\", data).then((res) => {\n        console.log(\"candle details\", res);\n        if (res.data.msg) {\n          return console.log(\"candle info error\", res.data.msg);\n        } else {\n          setStockHistory(res.data.data.c);\n          setGraphData(res.data.data.t);\n          setTimeData(\n            graphData &&\n              graphData.map((data) => {\n                let date = new Date(data * 1000);\n                return date.toLocaleString();\n              })\n          );\n        }\n      });\n    }\n    firstAPICall();\n  }, []);\n\n  useEffect(() => {\n    const currentdate = Math.round(new Date().getTime() / 1000);\n    const date = new Date();\n    const daybefore = Math.round(date.setDate(date.getDate() - 1) / 1000);\n    const weekbefore = Math.round(\n      (date.getTime() - 7 * 24 * 60 * 60 * 1000) / 1000\n    );\n    const d = new Date();\n    const m = d.getMonth();\n    d.setMonth(d.getMonth() - 1);\n    if (d.getMonth() == m) d.setDate(0);\n    d.setHours(0, 0, 0, 0);\n    // const monthbefore = d / 1000;\n\n    if (timeframe === \"1D\") {\n      setUnixtime(daybefore);\n      setInterval(\"1\");\n    } else if (timeframe === \"1W\") {\n      setUnixtime(weekbefore);\n      setInterval(\"60\");\n    } else if (timeframe === \"1M\") {\n      setUnixtime();\n      setInterval(\"60\");\n    } else if (timeframe === \"3M\") {\n      setUnixtime(currentdate - 2629743 * 3);\n      setInterval(\"D\");\n    } else if (timeframe === \"6M\") {\n      setUnixtime(currentdate - 2629743 * 6);\n      setInterval(\"D\");\n    } else if (timeframe === \"1Y\") {\n      setUnixtime(currentdate - 31556926);\n      setInterval(\"D\");\n    } else {\n      setUnixtime(currentdate - 31556926 * 5);\n      setInterval(\"W\");\n    }\n\n    async function getStockHistory() {\n      let data = { query, interval, unixtime, currentdate };\n      await Axios.post(\"/api/stockhistory\", data).then((res) => {\n        console.log(\"stock history details\", res);\n        if (res.data.msg) {\n          return console.log(\"company info error\", res.data.msg);\n        } else {\n          setStockHistory(res.data.data.c);\n          setGraphData(res.data.data.t);\n          setTimeData(\n            graphData &&\n              graphData.map((data) => {\n                let date = new Date(data * 1000);\n                return date.toLocaleString();\n              })\n          );\n          console.log(\"FH-Stock-History\", stockHistory);\n          console.log(\"FH-GraphData\", graphData);\n        }\n      });\n    }\n    getStockHistory();\n  }, [timeframe]);\n\n  return (\n    <div className=\"stockcard-container\">\n      <Card className={classes.root}>\n        <CardContent>\n          <div className=\"stockcard-top\">\n            <img src={company.logo} alt=\"\" className=\"stock-logo\" />\n            <div className=\"stockcard-top-title\">\n              <h2 className=\"title-main\">{company.name}</h2>\n              <h5 className=\"title-second\">\n                {company.ticker} | {company.exchange}\n              </h5>\n            </div>\n            <IconButton\n              aria-label=\"add to favorites\"\n              onClick={favouriteStock}\n              className=\"favourite-button\"\n            >\n              {favourite ? (\n                <FavoriteIcon className=\"favourite-button-icon\" />\n              ) : (\n                <FavoriteBorderIcon className=\"favourite-button-icon\" />\n              )}\n            </IconButton>\n          </div>\n          <div className=\"stockcard-main\">\n            <h3>\n              ${stock.c} {company.currency}\n            </h3>\n            <div className=\"stockcard-main-right\">\n              <h3\n                className={\n                  stock.c - stock.pc > 0\n                    ? \"stockcard-main-right-change-profit\"\n                    : \"stockcard-main-right-change-loss\"\n                }\n              >\n                {stock.c - stock.pc > 0\n                  ? `+${(stock.c - stock.pc).toFixed(2)}`\n                  : `${(stock.c - stock.pc).toFixed(2)}`}\n              </h3>\n              <h3>|</h3>\n              <h3 className=\"stockcard-main-right-percentchange\">\n                {`${(((stock.c - stock.pc) / stock.pc) * 100).toFixed(2)}%`}\n              </h3>\n              <h3>\n                {stock.c - stock.pc > 0 ? (\n                  <FontAwesomeIcon\n                    icon={faArrowAltCircleUp}\n                    className=\"trend-icon\"\n                  />\n                ) : (\n                  <FontAwesomeIcon\n                    icon={faArrowAltCircleDown}\n                    className=\"trend-icon\"\n                  />\n                )}\n              </h3>\n            </div>\n          </div>\n          <div className=\"stockcard-main-columns\">\n            <div className=\"stockcard-main-column-left\">\n              <p className=\"stockcard-value-header\">Open</p>\n              <p className=\"stockcard-value\">{stock.o}</p>\n              <p className=\"stockcard-value-header\">Volume</p>\n              <p className=\"stockcard-value\">{stock.o}</p>\n              <p className=\"stockcard-value-header\">Day Range</p>\n              <p className=\"stockcard-value\">\n                {stock.l}-{stock.h}\n              </p>\n            </div>\n            <div className=\"stockcard-main-column-right\">\n              <p className=\"stockcard-value-header\">Prev Close</p>\n              <p className=\"stockcard-value\">{stock.c}</p>\n              <p className=\"stockcard-value-header\">Market Cap</p>\n              <p className=\"stockcard-value\">\n                {company.marketCapitalization > 999999\n                  ? `${(company.marketCapitalization / 1000000).toFixed(2)}T`\n                  : `${(company.marketCapitalization / 1000).toFixed(2)}B`}\n              </p>\n\n              <p className=\"stockcard-value-header\">52 Week Range</p>\n              <p className=\"stockcard-value\">\n                {metrics && metrics.metric\n                  ? `${metrics.metric[\"52WeekLow\"].toFixed(2)}-${metrics.metric[\n                      \"52WeekHigh\"\n                    ].toFixed(2)}`\n                  : null}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"myRadio\"\n                value=\"1D\"\n                id=\"1D\"\n                className=\"radio__input\"\n                checked={timeframe === \"1D\"}\n                onClick={() => {\n                  setTimeframe(\"1D\");\n                }}\n              />\n              <label for=\"1D\" className=\"radio__label\">\n                1D\n              </label>\n              <input\n                type=\"radio\"\n                name=\"myRadio\"\n                value=\"1W\"\n                id=\"1W\"\n                className=\"radio__input\"\n                checked={timeframe === \"1W\"}\n                onClick={() => {\n                  setTimeframe(\"1W\");\n                }}\n              />\n              <label for=\"1W\" className=\"radio__label\">\n                1W\n              </label>\n              <input\n                type=\"radio\"\n                name=\"myRadio\"\n                value=\"1M\"\n                id=\"1M\"\n                className=\"radio__input\"\n                checked={timeframe === \"1M\"}\n                onClick={() => {\n                  setTimeframe(\"1M\");\n                }}\n              />\n              <label for=\"1M\" className=\"radio__label\">\n                1M\n              </label>\n              <input\n                type=\"radio\"\n                name=\"myRadio\"\n                value=\"3M\"\n                id=\"3M\"\n                className=\"radio__input\"\n                checked={timeframe === \"3M\"}\n                onClick={() => {\n                  setTimeframe(\"3M\");\n                }}\n              />\n              <label for=\"3M\" className=\"radio__label\">\n                3M\n              </label>\n              <input\n                type=\"radio\"\n                name=\"myRadio\"\n                value=\"6M\"\n                id=\"6M\"\n                className=\"radio__input\"\n                checked={timeframe === \"6M\"}\n                onClick={() => {\n                  setTimeframe(\"6M\");\n                }}\n              />\n              <label for=\"6M\" className=\"radio__label\">\n                6M\n              </label>\n              <input\n                type=\"radio\"\n                name=\"myRadio\"\n                value=\"1Y\"\n                id=\"1Y\"\n                className=\"radio__input\"\n                checked={timeframe === \"1Y\"}\n                onClick={() => {\n                  setTimeframe(\"1Y\");\n                }}\n              />\n              <label for=\"1Y\" className=\"radio__label\">\n                1Y\n              </label>\n              <input\n                type=\"radio\"\n                name=\"myRadio\"\n                value=\"5Y\"\n                id=\"5Y\"\n                className=\"radio__input\"\n                checked={timeframe === \"5Y\"}\n                onClick={() => {\n                  setTimeframe(\"5Y\");\n                }}\n              />\n              <label for=\"5Y\" className=\"radio__label\">\n                5Y\n              </label>\n            </div>\n\n            <LineGraph stockHistory={stockHistory} graphData={timeData} />\n          </CardContent>\n        </Collapse>\n        <Collapse in={newsexpanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <div>\n              {newsData &&\n                newsData.slice(0, 3).map((data) => {\n                  return (\n                    <div>\n                      <a className=\"news-link\" href={data.url}>\n                        <h2 className=\"news-headline\">{data.headline}</h2>\n                      </a>\n                      <div className=\"news-summary\">\n                        <img\n                          src={data.image}\n                          alt=\"article image\"\n                          className=\"news-image\"\n                        />\n\n                        {/* <h3>{data.datetime}</h3> */}\n\n                        <p className=\"news-info\">{data.summary}</p>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </CardContent>\n        </Collapse>\n        <CardActions>\n          <div className=\"expand-buttons\">\n            {newsexpanded ? null : (\n              <button\n                size=\"small\"\n                className=\"graph-button\"\n                onClick={handleExpandClick}\n              >\n                {!expanded ? \"Show Graphs\" : \"Hide Graphs\"}\n              </button>\n            )}\n            {expanded ? null : (\n              <button\n                size=\"small\"\n                className=\"graph-button news-button\"\n                onClick={handleExpandClickNews}\n              >\n                {!newsexpanded ? \"Show News\" : \"Hide News\"}\n              </button>\n            )}\n          </div>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Components/Graph.js",[],"/Users/Callum/Documents/Coding/InvestmentApp/sharewatch/src/Pages/Comparison.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":22,"column":6,"nodeType":"130","endLine":22,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"136","line":4,"column":20,"nodeType":"134","messageId":"135","endLine":4,"endColumn":26},{"ruleId":"132","severity":1,"message":"137","line":5,"column":3,"nodeType":"134","messageId":"135","endLine":5,"endColumn":8},{"ruleId":"132","severity":1,"message":"138","line":6,"column":3,"nodeType":"134","messageId":"135","endLine":6,"endColumn":10},{"ruleId":"132","severity":1,"message":"139","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"140","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":17,"column":13,"nodeType":"143","endLine":17,"endColumn":64},{"ruleId":"132","severity":1,"message":"144","line":13,"column":7,"nodeType":"134","messageId":"135","endLine":13,"endColumn":11},{"ruleId":"132","severity":1,"message":"136","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":33},{"ruleId":"132","severity":1,"message":"145","line":16,"column":9,"nodeType":"134","messageId":"135","endLine":16,"endColumn":26},{"ruleId":"132","severity":1,"message":"146","line":17,"column":9,"nodeType":"134","messageId":"135","endLine":17,"endColumn":20},{"ruleId":"132","severity":1,"message":"147","line":18,"column":9,"nodeType":"134","messageId":"135","endLine":18,"endColumn":25},{"ruleId":"132","severity":1,"message":"148","line":19,"column":9,"nodeType":"134","messageId":"135","endLine":19,"endColumn":31},{"ruleId":"132","severity":1,"message":"149","line":20,"column":9,"nodeType":"134","messageId":"135","endLine":20,"endColumn":19},{"ruleId":"132","severity":1,"message":"150","line":21,"column":9,"nodeType":"134","messageId":"135","endLine":21,"endColumn":17},{"ruleId":"128","severity":1,"message":"151","line":53,"column":6,"nodeType":"130","endLine":53,"endColumn":8,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"136","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":33},{"ruleId":"132","severity":1,"message":"144","line":10,"column":7,"nodeType":"134","messageId":"135","endLine":10,"endColumn":11},{"ruleId":"128","severity":1,"message":"153","line":42,"column":6,"nodeType":"130","endLine":42,"endColumn":8,"suggestions":"154"},{"ruleId":"128","severity":1,"message":"151","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":8,"suggestions":"155"},{"ruleId":"128","severity":1,"message":"156","line":189,"column":6,"nodeType":"130","endLine":189,"endColumn":13,"suggestions":"157"},{"ruleId":"128","severity":1,"message":"158","line":221,"column":6,"nodeType":"130","endLine":221,"endColumn":8,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":230,"column":7,"nodeType":"162","messageId":"163","endLine":230,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":233,"column":7,"nodeType":"162","messageId":"163","endLine":233,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":237,"column":7,"nodeType":"162","messageId":"163","endLine":237,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":241,"column":7,"nodeType":"162","messageId":"163","endLine":241,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":245,"column":7,"nodeType":"162","messageId":"163","endLine":245,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":249,"column":7,"nodeType":"162","messageId":"163","endLine":249,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":253,"column":7,"nodeType":"162","messageId":"163","endLine":253,"endColumn":23},{"ruleId":"128","severity":1,"message":"164","line":279,"column":6,"nodeType":"130","endLine":279,"endColumn":17,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":493,"column":25,"nodeType":"143","endLine":497,"endColumn":27},{"ruleId":"128","severity":1,"message":"168","line":184,"column":6,"nodeType":"130","endLine":184,"endColumn":13,"suggestions":"169"},{"ruleId":"128","severity":1,"message":"170","line":212,"column":6,"nodeType":"130","endLine":212,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":224,"column":22,"nodeType":"174","messageId":"175","endLine":224,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":230,"column":7,"nodeType":"162","messageId":"163","endLine":230,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":233,"column":7,"nodeType":"162","messageId":"163","endLine":233,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":236,"column":7,"nodeType":"162","messageId":"163","endLine":236,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":239,"column":7,"nodeType":"162","messageId":"163","endLine":239,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":242,"column":7,"nodeType":"162","messageId":"163","endLine":242,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":245,"column":7,"nodeType":"162","messageId":"163","endLine":245,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":248,"column":7,"nodeType":"162","messageId":"163","endLine":248,"endColumn":23},{"ruleId":"128","severity":1,"message":"164","line":273,"column":6,"nodeType":"130","endLine":273,"endColumn":17,"suggestions":"176"},{"ruleId":"166","severity":1,"message":"167","line":483,"column":25,"nodeType":"143","endLine":487,"endColumn":27},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkedLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["179"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'NavLink' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'port' is assigned a value but never used.","'isDesktopOrLaptop' is assigned a value but never used.","'isBigScreen' is assigned a value but never used.","'isTabletOrMobile' is assigned a value but never used.","'isTabletOrMobileDevice' is assigned a value but never used.","'isPortrait' is assigned a value but never used.","'isRetina' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'favouriteStocks'. Either include it or remove the dependency array.",["181"],["182"],"React Hook useEffect has a missing dependency: 'user.user'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'graphData', 'history', 'query', and 'user.user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimeData' needs the current value of 'graphData'.",["184"],"no-implied-eval","Implied eval. Consider passing a function instead of a string.","CallExpression","impliedEval","React Hook useEffect has missing dependencies: 'graphData', 'interval', 'query', 'stockHistory', and 'unixtime'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimeData' needs the current value of 'graphData'.",["185"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'user.user.id'. Either include it or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'graphData' and 'query'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimeData' needs the current value of 'graphData'.",["187"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"191","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"200","fix":"206"},"Update the dependencies array to be: [checkedLoggedIn]",{"range":"207","text":"208"},"Update the dependencies array to be: [user]",{"range":"209","text":"210"},"Update the dependencies array to be: [favouriteStocks]",{"range":"211","text":"212"},{"range":"213","text":"210"},"Update the dependencies array to be: [query, user.user]",{"range":"214","text":"215"},"Update the dependencies array to be: [graphData, history, query, user.user]",{"range":"216","text":"217"},"Update the dependencies array to be: [graphData, interval, query, stockHistory, timeframe, unixtime]",{"range":"218","text":"219"},"Update the dependencies array to be: [query, user.user.id]",{"range":"220","text":"221"},"Update the dependencies array to be: [graphData, query]",{"range":"222","text":"223"},{"range":"224","text":"219"},[514,516],"[checkedLoggedIn]",[1438,1440],"[user]",[1272,1274],"[favouriteStocks]",[517,519],[5575,5582],"[query, user.user]",[6532,6534],"[graphData, history, query, user.user]",[8408,8419],"[graphData, interval, query, stockHistory, timeframe, unixtime]",[5319,5326],"[query, user.user.id]",[6205,6207],"[graphData, query]",[8150,8161]]